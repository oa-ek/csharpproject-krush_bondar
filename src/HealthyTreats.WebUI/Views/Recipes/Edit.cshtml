@using HealthyTreats.Core.Entities
@model Recipe
@{
    var categories = ViewBag.Categories as List<Category>;
}

<h1>Edit recipe</h1>


<form asp-action="Edit" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    @Html.HiddenFor(model => model.Id)
    <div class="container shadow p-4 mb-5 bg-white rounded">
    <div class="mb-3">
        @Html.DisplayNameFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
        @Html.DisplayNameFor(model => model.Description)
        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="mb-3">
        @Html.DisplayNameFor(model => model.Instructons)
        @Html.TextBoxFor(model => model.Instructons, new { @class = "form-control" })
        <span asp-validation-for="Instructons" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        @Html.DisplayNameFor(model => model.ImageFile)
        <input asp-for="ImageFile" accept="image/*" />
        <span asp-validation-for="ImageFile" class="text-danger"></span>
    </div>

    <h3>Ingredients:</h3>
    <div id="ingredientContainer">
        @* Convert Ingredients collection to list *@
        @{
            var ingredientsList = Model.Ingredients.ToList();
        }
        @for (int i = 0; i < ingredientsList.Count; i++)
        {
            <div class="ingredient">
                <input type="hidden" name="ingredients[@i].Id" value="@ingredientsList[i].Id" />
                <input type="text" name="ingredients[@i].Title" value="@ingredientsList[i].Title" placeholder="Ingredient name" />
                <input type="number" name="ingredients[@i].Quantity" value="@ingredientsList[i].Quantity" placeholder="Quantity" />
                <input type="text" name="ingredients[@i].Unit" value="@ingredientsList[i].Unit" placeholder="Unit" />
            </div>

                <br />
        </div>
        <button type="button" id="addIngredientBtn" class="btn btn-primary">Add ingredient</button>

        <span asp-validation-for="Ingredients" class="text-danger"></span>

        }

    </div>
    <button type="button" id="addIngredientBtn" class="btn btn-primary">Add Ingredient</button>

    <h3>Categories:</h3>
    @foreach (var category in categories)
    {
        <div class="form-check">
            <input class="form-check-input" type="checkbox" name="selectedCategories" value="@category.Id"
            @(Model.Categories.Any(c => c.Id == category.Id) ? "checked" : "") />
            <label class="form-check-label" for="category_@category.Id">
                @category.TitleCategory
            </label>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" name="Vegan" value="2">
            <label class="form-check-label" for="Vegan">
                Vegan
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" name="Vegetarian" value="3">
            <label class="form-check-label" for="Vegetarian">
                Vegetarian
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" name="GlutenFree" value="4">
            <label class="form-check-label" for="GlutenFree">
                Gluten free
            </label>
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Зберегти</button>
    <div/>

    }

    <button class="btn btn-primary" type="submit">Save</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var ingredientCount = @Model.Ingredients.Count;

        document.getElementById("addIngredientBtn").addEventListener("click", function () {
            var container = document.getElementById("ingredientContainer");
            var newIngredient = document.createElement("div");
            newIngredient.classList.add("ingredient");
            newIngredient.style.marginBottom = "15px";
            newIngredient.innerHTML = `

                        <input type="text" name="ingredients[${ingredientCount}].Title" placeholder="Ingredient name">
                        <input type="number" name="ingredients[${ingredientCount}].Quantity" placeholder="Quantity">
                        <input type="text" name="ingredients[${ingredientCount}].Unit" placeholder="Unit">
                    `;

            container.appendChild(newIngredient);
            ingredientCount++;
        });
    </script>
}
